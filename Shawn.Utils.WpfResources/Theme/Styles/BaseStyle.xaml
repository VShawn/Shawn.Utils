<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Basic/Const.xaml"></ResourceDictionary>
        <ResourceDictionary Source="../Basic/Font.xaml"></ResourceDictionary>
        <ResourceDictionary Source="../Basic/Effects.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="DefaultInputPadding">8,4</Thickness>

    <Style TargetType="Control" x:Key="ControlBase">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="{DynamicResource TextFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource YaHei}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundAccent" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundAccent" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderCornerRadius" Value="{DynamicResource DefaultCornerRadius}"/>
    </Style>

    <Style TargetType="Control" BasedOn="{StaticResource ControlBase}" />

    <Style TargetType="TextElement" x:Key="TextElementBase">
        <Setter Property="FontSize" Value="{DynamicResource TextFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource YaHei}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"></Setter>
    </Style>
    <Style TargetType="TextBlock" x:Key="TextBlockBase">
        <Setter Property="FontSize" Value="{DynamicResource TextFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource YaHei}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"></Setter>
    </Style>
    <!--<Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}" />
    <Style TargetType="TextElement" BasedOn="{StaticResource TextElementBase}" />-->


    <ControlTemplate x:Key="ErrorTemplate">
        <Border BorderBrush="Red" BorderThickness="2" CornerRadius="{DynamicResource DefaultCornerRadius}">
            <Grid>
                <AdornedElementPlaceholder/>
                <TextBlock Margin="0,0,3,1"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           IsHitTestVisible="False"
                           FontSize="10"
                           Foreground="Red"
                           Text="{Binding [0].ErrorContent}" />
            </Grid>

            <!-- 用这个写法，Popup 不会跟随窗口移动 -->
            <!--<StackPanel>
                <AdornedElementPlaceholder x:Name="AdornedElement" />
                <Popup PlacementTarget="{Binding ElementName=AdornedElement}" 
                       IsOpen="True">
                    <Border BorderBrush="{DynamicResource AccentLightBrush}" 
                            Background="{DynamicResource AccentMidBrush}"
                            CornerRadius="{StaticResource DefaultCornerRadius}">
                        <TextBlock Text="{Binding /ErrorContent}" 
                                   Foreground="{DynamicResource AccentTextBrush}"/>
                    </Border>
                </Popup>
            </StackPanel>-->
        </Border>
    </ControlTemplate>

</ResourceDictionary>